#!/bin/sh

# 少し凝った zshrc
# License : MIT
# http://mollifier.mit-license.org/

########################################
# 環境変数
export LANG=ja_JP.UTF-8
export LESS='-R'
export LESSOPEN='| /usr/share/source-highlight/src-hilite-lesspipe.sh %s'

#Dropbox追加
export PATH=$PATH:$HOME/Dropbox/script:/usr/local/my_bin
export PATH=/home/nikke/anaconda2/bin:$PATH
export PATH=/home/nikke/anaconda3/bin:$PATH

# 色を使用出来るようにする
autoload -Uz colors
colors

# emacs 風キーバインドにする
bindkey -e

# ヒストリの設定
HISTFILE=~/.zsh_history
HISTSIZE=1000000
SAVEHIST=1000000

# プロンプト
# 1行表示
# PROMPT="%~ %# "
#PROMPT="%{${fg[087]}#} ~ %#{${reset_color}%}
# 2行表示
#PROMPT="%{${fg[green]}%}[%n@%m]%{${reset_color}%} %~
#%# "
PROMPT="%{${fg[green]}%}[%n@ %~] %{${reset_color}%}"
							 
# 単語の区切り文字を指定する
autoload -Uz select-word-style
select-word-style default
# ここで指定した文字は単語区切りとみなされる
# / も区切りと扱うので、^W でディレクトリ１つ分を削除できる
zstyle ':zle:*' word-chars " /=;@:{},|"
zstyle ':zle:*' word-style unspecified

########################################
# 補完
# 補完機能を有効にする
autoload -Uz compinit
compinit

# 補完で小文字でも大文字にマッチさせる
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'

# ../ の後は今いるディレクトリを補完しない
zstyle ':completion:*' ignore-parents parent pwd ..

# sudo の後ろでコマンド名を補完する
zstyle ':completion:*:sudo:*' command-path /usr/local/sbin /usr/local/bin \
                   /usr/sbin /usr/bin /sbin /bin /usr/X11R6/bin

# ps コマンドのプロセス名補完
zstyle ':completion:*:processes' command 'ps x -o pid,s,args'


########################################
# vcs_info
autoload -Uz vcs_info
autoload -Uz add-zsh-hook

zstyle ':vcs_info:*' formats '%F{green}(%s)-[%b]%f'
zstyle ':vcs_info:*' actionformats '%F{red}(%s)-[%b|%a]%f'

function _update_vcs_info_msg() {
    LANG=en_US.UTF-8 vcs_info
    RPROMPT="${vcs_info_msg_0_}"
}
add-zsh-hook precmd _update_vcs_info_msg


########################################
# オプション
# 日本語ファイル名を表示可能にする
setopt print_eight_bit

# beep を無効にする
setopt no_beep

# フローコントロールを無効にする
setopt no_flow_control

# '#' 以降をコメントとして扱う
setopt interactive_comments

# ディレクトリ名だけでcdする
setopt auto_cd

# cd したら自動的にpushdする
setopt auto_pushd
# 重複したディレクトリを追加しない
setopt pushd_ignore_dups

# 同時に起動したzshの間でヒストリを共有する
setopt share_history

# 同じコマンドをヒストリに残さない
setopt hist_ignore_all_dups

# スペースから始まるコマンド行はヒストリに残さない
setopt hist_ignore_space

# ヒストリに保存するときに余分なスペースを削除する
setopt hist_reduce_blanks

# 高機能なワイルドカード展開を使用する
setopt extended_glob

########################################
# キーバインド

# ^R で履歴検索をするときに * でワイルドカードを使用出来るようにする
bindkey '^R' history-incremental-pattern-search-backward

########################################
# エイリアス

alias la='ls -a'
alias ll='less'
alias l='ls -al'

alias rm='rm -rf'
alias cp='cp -ir'
alias mv='mv -i'
alias mkdir='mkdir -p'

alias adm_rm='sudo rm -rf .*'
alias shutdown='sudo shutdown -h now'
alias xdvi='xdvi -watchfile 1'
alias ping_test='ping -w 3 8.8.8.8'
alias 'chmod -R'='find -type f -print0 |xargs -0 chmod'
alias 'insert_file_multi'='cat <<"EOT" >>'
insert_file (){echo $2 >> $1;}
alias myip="ifconfig|pcregrep -o 'inet \d{1,3}\.\d{1,3}.\d{1,3}.\d{1,3}'|grep -v 127.0.0.1"
alias -g T='2>&1 | tee'
alias k2pdf_1column='k2pdfopt -n -w 1.0s -h 1.0s -om 1.5,0.25,1.5,0.25 -c -wrap- -fc- -col 2 -vls 1.4'

mk_mv (){mkdir $1; cd $1; }

#alias dvipdfmx='dvipdfmx -f ptex-ipa.map'
#これをやるとbeamerの目次が出なくなる

#to do require xsel
alias pbcopy='xsel --clipboard --input'
alias pbpaste='xsel --clipboard --output'

# グローバルエイリアス
alias -g L='| less'
alias -g G='| grep'

# C で標準出力をクリップボードにコピーする
# mollifier delta blog : http://mollifier.hatenablog.com/entry/20100317/p1
if which pbcopy >/dev/null 2>&1 ; then
    # Mac
    alias -g C='| pbcopy'
elif which xsel >/dev/null 2>&1 ; then
    # Linux
    alias -g C='| xsel --input --clipboard'
elif which putclip >/dev/null 2>&1 ; then
    # Cygwin
    alias -g C='| putclip'
fi

#自作関数読み込み
. $HOME/Dropbox/my_library.sh

# ディストリビューション別の設定
dist_info=`uname -a`
case ${dist_info} in
		*Arch*)
				alias pac_install='sudo pacman -S'
				;;
		*Ubuntu*)
				alias open='gnome-open'
				alias apt_install='sudo apt-get install -y'
				alias gui-start='sudo start lightdm'
				alias gui-start='sudo stop lightdm'
				ppa_add(){
						sudo -E apt-add-repository $1
						sudo apt-get update
						sudo apt-get install -y $2
						sudo apt-get autoremove 
				}
				;;

esac

#GO環境
export GOROOT=$HOME/go
export GOPATH=$GOROOT/bin
export PATH=$PATH:$GOPATH

#python仮想環境
export WORKON_HOME=~/workspace/virtual_python_env
mkdir -p $WORKON_HOME

alias python_vir=". $WORKON_HOME/env2/bin/activate"

my_python(){
		python_vir
		python ${1:-}
		deactivate
}

my_ipython(){
		python_vir
		ipython ${1:-}
		deactivate
}

#alias my_python='python_vir;python;deactivate'
#alias my_ipython='python_vir;ipython;deactivate'

git_my_config(){
		git config --global user.name "sablet"
		git config --global user.email "e.typ719@gmail.com"
		git config --global color.ui auto
}
#function git(){hub "$@"} # zsh


# wine 
#env WINEPREFIX=$HOME/.wine32 WINEARCH='win32' wine 'wineboot'
#env WINEPREFIX=$HOME/.wine32 WINEARCH='win32' winecfg
#env WINEPREFIX=$HOME/.wine32 winetricks atmlib riched20 wsh57 mspatcha
export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/local/cuda/lib64"
export CUDA_HOME=/usr/local/cuda

alias mytensor='source /home/nikke/virtualenvs/tensorflow-gpu/bin/activate'
export KERAS_BACKEND=tensorflow
export KERAS_FLOATX=float64
export KERAS_EPSILON=1e-15


# gtkアプリでibus日本語入力可能にする
export GTK_IM_MODULE=fcitx
export XMODIFIERS=@im=fcitx
export QT_IM_MODULE=fcitx

export LESS='-R'
export LESSOPEN='| /usr/share/source-highlight/src-hilite-lesspipe.sh %s'

# とりあえずGPUあったらproxyありにしてみた。
lspci|grep GTX > /dev/null && {
		alias sudo='sudo -E'
		export http_proxy="http://proxy.kuins.net:8080"
		export https_proxy="https://proxy.kuins.net:8080"
		export ftp_proxy="http://proxy.kuins.net:8080"
		export ssh_proxy=$http_proxy
}

function g_all_push(){
    : ${1:?}
    cd $HOME/fx_esn
    git add -A
    git commit -m "$1"
    git push
    cd -
}
# alias new='ls -lt|head'
alias 'g_p'='cd $HOME/fx_esn;git pull;cd -'

function new(){ls -lt $1 |head; }

