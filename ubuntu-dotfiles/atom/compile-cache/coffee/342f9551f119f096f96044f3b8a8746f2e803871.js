(function() {
  var ResultView, TextEditorView, WatchView;

  TextEditorView = require('atom-space-pen-views').TextEditorView;

  ResultView = require('./result-view');

  module.exports = WatchView = (function() {
    function WatchView(kernel) {
      this.kernel = kernel;
      this.element = document.createElement('div');
      this.element.classList.add('hydrogen', 'watch-view');
      this.inputElement = new TextEditorView();
      this.inputElement.element.classList.add('watch-input');
      this.inputEditor = this.inputElement.getModel();
      this.inputEditor.setGrammar(this.kernel.grammar);
      this.inputEditor.setSoftWrapped(true);
      this.inputEditor.setLineNumberGutterVisible(false);
      this.inputEditor.moveToTop();
      this.resultView = new ResultView();
      this.resultView.setMultiline(true);
      this.element.appendChild(this.inputElement.element);
      this.element.appendChild(this.resultView.element);
      this.addHistorySwitch().clearHistory();
    }

    WatchView.prototype.clearHistory = function(currentHistory) {
      this.currentHistory = currentHistory != null ? currentHistory : [];
      return this;
    };

    WatchView.prototype.addToHistory = function(result) {
      var total;
      if (result.data === 'ok') {
        return;
      }
      this.currentHistory.push(result);
      this.currentHistory.pos = this.currentHistory.length - 1;
      this.counter.innerText = "" + this.currentHistory.length + " / " + this.currentHistory.length;
      this.scrollbar.querySelector('.hidden').style.width = (total = this.currentHistory.length * this.scrollbar.offsetWidth) + 'px';
      this.scrollbar.scrollLeft = total;
      this.historySwitch.classList.add('show');
      return this;
    };

    WatchView.prototype.addHistorySwitch = function() {
      var filler, nextButton, prevButton;
      this.historySwitch = document.createElement('div');
      this.historySwitch.classList.add('history-switch', 'hide');
      this.scrollbar = document.createElement('div');
      filler = document.createElement('div');
      this.scrollbar.classList.add('scrollbar');
      filler.classList.add('hidden');
      this.scrollbar.appendChild(filler);
      this.scrollbar.onscroll = (function(_this) {
        return function() {
          _this.currentHistory.pos = Math.ceil(_this.scrollbar.scrollLeft / (_this.scrollbar.offsetWidth + 1));
          _this.counter.innerText = "" + (_this.currentHistory.pos + 1) + " / " + _this.currentHistory.length;
          _this.clearResults();
          return _this.resultView.addResult(_this.currentHistory[_this.currentHistory.pos]);
        };
      })(this);
      this.counter = document.createElement('div');
      this.counter.classList.add('counter');
      nextButton = document.createElement('button');
      nextButton.classList.add('btn', 'btn-xs', 'icon', 'icon-chevron-right', 'next-btn');
      nextButton.onclick = (function(_this) {
        return function() {
          if (_this.currentHistory.pos !== _this.currentHistory.length - 1 && (_this.currentHistory.pos != null)) {
            _this.currentHistory.pos += 1;
            _this.counter.innerText = "" + (_this.currentHistory.pos + 1) + " / " + _this.currentHistory.length;
            _this.scrollbar.scrollLeft = _this.currentHistory.pos * (_this.scrollbar.offsetWidth + 1);
            _this.clearResults();
            return _this.resultView.addResult(_this.currentHistory[_this.currentHistory.pos]);
          }
        };
      })(this);
      prevButton = document.createElement('button');
      prevButton.classList.add('btn', 'btn-xs', 'icon', 'icon-chevron-left');
      prevButton.onclick = (function(_this) {
        return function() {
          if (_this.currentHistory.pos !== 0 && (_this.currentHistory.pos != null)) {
            _this.currentHistory.pos -= 1;
            _this.counter.innerText = "" + (_this.currentHistory.pos + 1) + " / " + _this.currentHistory.length;
            _this.scrollbar.scrollLeft = _this.currentHistory.pos * (_this.scrollbar.offsetWidth + 1);
            _this.clearResults();
            return _this.resultView.addResult(_this.currentHistory[_this.currentHistory.pos]);
          }
        };
      })(this);
      this.historySwitch.appendChild(prevButton);
      this.historySwitch.appendChild(this.counter);
      this.historySwitch.appendChild(nextButton);
      this.historySwitch.appendChild(this.scrollbar);
      this.element.appendChild(this.historySwitch);
      return this;
    };

    WatchView.prototype.run = function() {
      var code;
      code = this.getCode();
      this.clearResults();
      console.log('watchview running:', code);
      if ((code != null) && (code.length != null) && code.length > 0) {
        return this.kernel.executeWatch(code, (function(_this) {
          return function(result) {
            console.log('watchview got result:', result);
            _this.resultView.addResult(result);
            return _this.addToHistory(result);
          };
        })(this));
      }
    };

    WatchView.prototype.setCode = function(code) {
      this.inputEditor.setText(code);
      return this;
    };

    WatchView.prototype.getCode = function() {
      return this.inputElement.getText();
    };

    WatchView.prototype.clearResults = function() {
      var e;
      try {
        this.element.removeChild(this.resultView.element);
        this.resultView.destroy();
      } catch (_error) {
        e = _error;
        console.error(e);
      }
      this.resultView = new ResultView();
      this.resultView.setMultiline(true);
      return this.element.appendChild(this.resultView.element);
    };

    WatchView.prototype.destroy = function() {
      this.clearResults();
      return this.element.parentNode.removeChild(this.element);
    };

    return WatchView;

  })();

}).call(this);

//# sourceMappingURL=data:application/json;base64,

//# sourceURL=/home/nikke/.atom/packages/Hydrogen/lib/watch-view.coffee
